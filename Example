include<stdio.h>    //for,while,if,else switch
include<conio.h>

int main()
{
  clrscr();

  int grade;

  printf("Input Grade");
  scanf("%d",&grade);

  switch(grade<101)
  {
    case 1:
      if (grade>=95)
        printf("A+");
      else
        printf("Invalid");
    break;
    case 2:
      if (grade>=85)
        printf("A");
      else
        printf("Invalid");
      break;
    default:
      printf("Invalid");
  }
getch();
}



                                       //     recursion
#include <stdio.h>
int sum(int n);

int main() {
    int number, result;

    printf("Enter a positive integer: ");
    scanf("%d", &number);

    result = sum(number);

    printf("sum = %d", result);
    return 0;
}

int sum(int n) {
    if (n != 0)
        return n + sum(n-1); 
    else
        return n;
}           

//Binarch search tree

class BinarySearchTree{  
 public static void binarySearch(int arr[], int first, int last, int key){  
   int mid = (first + last)/2;  
   while( first <= last ){  
      if ( arr[mid] < key ){  
        first = mid + 1;     
      }else if ( arr[mid] == key ){  
        System.out.println("Element is found at index: " + mid);  
        break;  
      }else{  
         last = mid - 1;  
      }  
      mid = (first + last)/2;  
   }  
   if ( first > last ){  
      System.out.println("Element is not found!");  
   }  
 }  
 public static void main(String args[]){  
        int arr[] = {10,20,30,40,50};  
        int key = 30;  
        int last=arr.length-1;  
        binarySearch(arr,0,last,key);     
 }  
}  




//java script program to search prime

function test_prime(n)
{

  if (n===1)
  {
    return false;
  }
  else if(n === 2)
  {
    return true;
  }else
  {
    for(var x = 2; x < n; x++)
    {
      if(n % x === 0)
      {
        return false;
         }
    }
    return true;  
  }
}

console.log(test_prime(37));
